#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";
        combo_cmd_shift_s {
            timeout-ms = <50>;
            key-positions = <13 41>;    // S key + right thumb key (backspace)
            bindings = <&kp LG(LS(S))>;
        };
    };

    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        lhm: layer_hold_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };

        bspc_layer: backspace_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "BACKSPACE_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp LCTRL   &kp Q    &kp W    &kp E     &kp R     &kp T          &kp Y     &kp U     &kp I     &kp O     &kp P     &kp RCTRL
                &kp TAB     &kp A    &kp S    &kp D     &kp F     &kp G          &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT
                &kp LSHFT   &kp Z    &kp X    &kp C     &kp V     &kp B          &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT
                                    &kp LALT  &lhm 1 ESC  &bhm LGUI SPACE        &bhm RGUI RET  &bspc_layer BSPC BSPC  &kp RALT
            >;
        };

        lower_layer {
            bindings = <
                &kp TAB     &kp N1   &kp N2   &kp N3    &kp N4    &kp N5         &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp BSPC
                &kp LCTRL   &kp LEFT &kp DOWN &kp UP    &kp RIGHT &trans         &trans    &trans    &trans    &trans    &trans    &trans
                &kp LSHFT   &trans   &trans   &trans    &trans    &trans         &trans    &trans    &trans    &trans    &trans    &trans
                                    &kp LGUI  &mo 3     &kp SPACE               &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            bindings = <
                &kp ESC     &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT      &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp BSPC
                &kp TAB     &kp LC(A) &kp LS(LC(S)) &kp LC(D) &kp LC(F) &kp MINUS  &kp PLUS  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE &trans
                &kp LSHFT   &trans    &trans   &kp LC(C) &kp LC(V) &kp UNDER      &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE &trans
                                    &kp LGUI  &mo 3     &kp SPACE               &kp RET   &trans    &kp RALT
            >;
        };

        adjust_layer {
            bindings = <
                &sys_reset  &trans       &trans &kp C_VOL_DN &kp C_VOL_UP       &trans    &trans    &trans    &trans    &trans    &kp LG(LS(N4)) &trans
                &trans      &trans       &kp C_PREV       &kp C_NEXT        &kp C_FAST_FORWARD     &trans         &trans    &trans    &trans    &trans    &trans    &trans
                &trans      &trans       &trans       &trans         &trans     &trans         &trans    &trans    &trans    &trans    &trans    &trans
                                        &kp LGUI      &trans         &kp SPACE               &kp RET   &trans    &kp RALT
            >;
        };
    };
};